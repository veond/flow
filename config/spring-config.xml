<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd">


	<!--  properties 文件配制 -->
	<context:property-placeholder location="/WEB-INF/classes/application.properties"/>
	
	<!-- 工作流 模型ID 配制信息 -->
	<util:properties id="WorkModelId" location="classpath:work-model-config.properties"/>

	<!-- 让此包下 spring 的注解能被解析  -->
	<context:component-scan base-package="com.zxw" />
	
	<!--  spring 整合 mybatis, (organization 数据源) -->
	<bean id="organization_dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${organization.driverClassName}" />
		<property name="url" value="${organization.db_url}" />
		<property name="username" value="${organization.db_username}" />
		<property name="password" value="${organization.db_password}" />
	</bean>
	<bean id="organization_sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="WEB-INF/classes/mybatis-config.xml" />
		<property name="dataSource" ref="organization_dataSource" />
	</bean>
	<bean id="organization_sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="organization_sqlSessionFactory" />
	</bean>
	<!-- 工作流引擎 -->
	<bean id="work_dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${work.driverClassName}" />
		<property name="url" value="${work.db_url}" />
		<property name="username" value="${work.db_username}" />
		<property name="password" value="${work.db_password}" />
	</bean>
	<bean id="work_sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="WEB-INF/classes/mybatis-config.xml" />
		<property name="dataSource" ref="work_dataSource" />
	</bean>
	<bean id="work_sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="work_sqlSessionFactory" />
	</bean>
	
	
	<!-- 将sqlSession统一放在 map里面使用 (所有的sqlSession都在BaseService里面管理)  -->
	<bean id="sqlSessionMap" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="organization_sqlSession" value-ref="organization_sqlSession"></entry>		
				<entry key="work_sqlSession" value-ref="work_sqlSession"></entry>		
			</map>
		</constructor-arg>	
	</bean>
	
	
	<!-- 配制spring转向页页面的前后缀 -->
 	<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
	    <property name="prefix" value="/WEB-INF/page/"/>
	    <property name="suffix" value=".jsp"/>
	</bean> 
	
	
	<!-- 配制 设置 base url的拦截器， 这个要在所有拦截器之上, 以免request里面base不能设置进去  -->
	<mvc:interceptors>
        <bean class="com.zxw.system.web.SetBaseUrlInterceptor"></bean>
    </mvc:interceptors>
    
      
    <!-- 配制spring mvc 返回 对象时，自动转成json  -->
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>application/json; charset=utf-8</value>  <!-- 配制支持json格式数据提交  --> 
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射   (就是将对象转成JSON)-->  
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
            </list>  
        </property>  
    </bean>  
    
    
    
    
    
</beans>